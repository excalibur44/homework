简易版四子棋
  四子棋是一款普遍流行的简易型桌面游戏，据说，虎克船长曾因专注于此游戏而长期隐身在住所，当船员们发现船长的这一专长之后，他们称这个游戏为“船长的情妇”。
	四子棋是个双人游戏，两人轮流下棋，棋盘由行和列组成的网格，每个选手每次下一个子直到两人中有一人的棋子连成一条水平线、垂直线或者是对角线。
	本实验需要在LC-3中实现简易版四子棋的游戏，两位选手通过键盘和输出窗口轮流交互操作，棋盘由6 X 6的网格组成。
	游戏规则如下：
	两位选手依次轮流落子；
	选手不能悔棋；
	有子的地方不能继续落子；
	直到有一方的四个棋子能够连成一条水平线、垂直线或者是对角线；
	如果棋盘已满，无人获胜，则平局。
	游戏最初时应该打印空的棋盘，可以用ASCII码"-" （即ASCII 码 x002D）来表示该处为空，
	"O"(ASCII 码 x004F)表示第一位选手的棋子，"X" (ASCII 码 x0058)来表示第二位选手的棋子.
	为了让棋盘更易于观察，在各列间加一个空格，第6列之后不要添加，初始棋盘应该如下：
- - - - - -
- - - - - -
- - - - - -
- - - - - -
- - - - - -
- - - - - -

选手一始终先下第一步棋，然后两者轮流落子，在每次落子之后，应该打印该选手的信息，提示他落子，以选手一为例，应该打印信息如下：
  Player 1, choose a column:
为了明确选手的落子的位置，该选手应该输入数字1-6，然后回车，数字1-6指示在落子所在的列，从左到右，无需输入行号，程序应默认从行号6到行号1递减的顺序填入该棋子，若前后输入的列号相同，则行号减一。例如，如果选手第一次在左起第二列落子，应该输入2，然后回车，则该棋子落在行6列2处，当后面输入的列号再次为2时，则将棋子落子行5列2处，以此类推，详情见后续示例输出。程序应该确保选手输入的数字对应正确的列的范围，如果输入不合理，应该输出一条错误信息，提示该选手继续输入，例如，如果对于选手一：
	Player 1, choose a column: D 
  Invalid move. Try again. 
  Player 1, choose a column: 7 
  Invalid move. Try again. 
  Player 1, choose a column:
程序应该一直提示该选手，知道输入正确的数字，当用户输入完成，程序应通过显示回馈给选手，然后通过换行符(ASCII 码 x000A)换行。
当选手输入成功后，程序应打印更新后的棋盘，并检查是否有人获胜，如果没人获胜，则轮到下一位输入。
当其中一位获胜或平局时，游戏结束，程序显示最后的棋盘情况并终止（Halt）。例如，如果选手二有四子相连，应该输出：
  Player 2 Wins.
如果平局，程序应该输出：
  Tie Game. 

示例输出
- - - - - - 
- - - - - - 
- - - - - - 
- - - - - - 
- - - - - - 
- - - - - - 
Player 1, choose a column: 1
- - - - - - 
- - - - - - 
- - - - - - 
- - - - - - 
- - - - - - 
O - - - - - 
Player 2, choose a column: 2
- - - - - - 
- - - - - - 
- - - - - - 
- - - - - - 
- - - - - - 
O X - - - - 
Player 1, choose a column: 2
- - - - - - 
- - - - - - 
- - - - - - 
- - - - - - 
- O - - - - 
O X - - - - 
Player 2, choose a column: 3
- - - - - - 
- - - - - - 
- - - - - - 
- - - - - - 
- O - - - - 
O X X - - - 
Player 1, choose a column: 3
- - - - - - 
- - - - - - 
- - - - - - 
- - - - - - 
- O O - - - 
O X X - - - 
Player 2, choose a column: 1
- - - - - - 
- - - - - - 
- - - - - - 
- - - - - - 
X O O - - - 
O X X - - - 
Player 1, choose a column: 4
- - - - - - 
- - - - - - 
- - - - - - 
- - - - - - 
X O O - - - 
O X X O - - 
Player 2, choose a column: 4
- - - - - - 
- - - - - - 
- - - - - - 
- - - - - - 
X O O X - - 
O X X O - - 
Player 1, choose a column: 3
- - - - - - 
- - - - - - 
- - - - - - 
- - O - - - 
X O O X - - 
O X X O - - 
Player 2, choose a column: 4
- - - - - - 
- - - - - - 
- - - - - - 
- - O X - - 
X O O X - - 
O X X O - - 
Player 1, choose a column: 4
- - - - - - 
- - - - - - 
- - - O - - 
- - O X - - 
X O O X - - 
O X X O - - 
Player 1 Wins.
----- Halting the processor ----- 
提示：
参考程序在内存中分配36个空间来表示棋盘的每个位置，最简单的遍历棋盘的方法为：如果该位置为空，则存放0，如果该位置为选手一的棋子，则存放1，如果为选手二的棋子，则存放-1，这样可以最大程度的使用状态码。
记得所有的输入和输出使用ASCII字符，必要时自己转换。
从键盘接收输入时使用TRAP x20 (GETC)，显示字符时使用TRAP x20 和TRAP x21 (OUT)，合适的地方使用子例程，每次子例程都应暂存和恢复要使用的寄存器，这样有利于调试程序。
程序首行指定第一条指令的地址，即.ORIG x3000。
